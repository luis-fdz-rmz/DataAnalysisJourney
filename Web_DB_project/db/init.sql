CREATE TYPE LUNCH_TYPE AS ENUM('Free or Reduced', 'Standard');
CREATE TYPE SUBJECTS AS ENUM('MATH','READING', 'WRITING');
CREATE TYPE ROLE_CATEGORY as ENUM('STUDENT', 'PROFESSOR', 'PROFESSOR''s ASSISTANT', 'ADMINISTRATION');
CREATE TYPE PARENT_EDUCATION as ENUM('High School', 'Bachelor''s', 'Master''s', 'PhD');
CREATE TYPE DEPARTMENT as ENUM('MATH', 'ENGLISH', 'SCIENCE');

CREATE TABLE ApproveUsers(
    approve_id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    username VARCHAR(30) UNIQUE, 
    password_hash VARCHAR(162),
    email VARCHAR(100) UNIQUE,
    user_name VARCHAR(40),
    user_role ROLE_CATEGORY,
    gender VARCHAR(10),
    birthday DATE,
    profile_picture TEXT,
    grade_level INTEGER,
    parent_education PARENT_EDUCATION,
    lunch_type LUNCH_TYPE,
    internet_access BOOLEAN,
    extra_activities BOOLEAN,
    department DEPARTMENT
);

INSERT INTO ApproveUsers(username, password_hash, email, user_name, user_role, gender, birthday, 
profile_picture,grade_level, parent_education, lunch_type, internet_access,
 extra_activities, department) VALUES
('godlewis', 'scrypt:32768:8:1$gyyEwrngo6bWbhhF$1cea21124c6cf5f49e6f08eff4d8d49c31983cc4c31270b57843d42e921d2be81fe3cea621076f3a3002fdaffeca4e5d46c6a826f95d164c1d59ef32ca531421',
 'email1@email.com', 'LUIS FERNANDEZ', 'STUDENT', 'M', '2001-08-16', 
'<?xml version="1.0" encoding="utf-8" ?>\n<svg baseProfile="full" height="300px" version="1.1" width="300px" xmlns="http://www.w3.org/2000/svg" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xlink="http://www.w3.org/1999/xlink"><defs /><circle cx="50%" cy="50%" fill="rgb(160,128,171)" r="50%" /><text dominant-baseline="middle" fill="rgb(40,40,40)" font-family="Courier New" font-size="100" font-weight="600" text-anchor="middle" x="50%" y="50%">LF</text></svg>',
12,'PhD', 'Standard', True, True, null),
('TESTAprr2', 'scrypt:32768:8:1$xW20cB5RlYiOeYPS$b90723c1ae22a85bcbbae2d49a1c28f0d68818ed3ae1e77250ae7ca86ba979810e6302b8b380a7ee9ec989d0ebf4a53f2d6f62a795f8ac74913d8246c47dd725',
'email2@email.com', 'TEST USER2', 'STUDENT', 'M', '2001-08-16',
'<?xml version="1.0" encoding="utf-8" ?>\n<svg baseProfile="full" height="300px" version="1.1" width="300px" xmlns="http://www.w3.org/2000/svg" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xlink="http://www.w3.org/1999/xlink"><defs /><circle cx="50%" cy="50%" fill="rgb(120,186,141)" r="50%" /><text dominant-baseline="middle" fill="rgb(40,40,40)" font-family="Courier New" font-size="100" font-weight="600" text-anchor="middle" x="50%" y="50%">AA</text></svg>', 
12,'PhD', 'Free or Reduced', True, True, null);

CREATE TABLE Users (
    user_id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, 
    username VARCHAR(30) UNIQUE, 
    password_hash VARCHAR(162),
    email VARCHAR(100) UNIQUE,
    user_name VARCHAR(40),
    user_role ROLE_CATEGORY,
    gender VARCHAR(10),
    birthday DATE,
    profile_picture TEXT
);

CREATE TABLE Students(
    user_id INTEGER PRIMARY KEY REFERENCES Users(user_id),
    grade_level INTEGER,
    parent_education PARENT_EDUCATION,
    lunch_type LUNCH_TYPE,
    internet_access BOOLEAN,
    extra_activities BOOLEAN
);

CREATE TABLE Professors(
    professor_id INTEGER PRIMARY KEY REFERENCES Users(user_id),
    department DEPARTMENT
);

-- student_name, gender, birthday, grade_level, parent_education, lunch_type, internet_access,extra_activities
INSERT INTO Users(username, password_hash, email, user_name, user_role, gender, birthday, profile_picture)

SELECT username, password_hash, email, user_name, user_role, gender, birthday, profile_picture
FROM ApproveUsers;

INSERT INTO Students(user_id, grade_level, parent_education, lunch_type, internet_access, extra_activities)

SELECT u.user_id, s.grade_level, s.parent_education, s.lunch_type, s.internet_access, s.extra_activities
FROM Users as u NATURAL INNER JOIN ApproveUsers as s;

DELETE FROM ApproveUsers
WHERE 1=1;




CREATE TABLE StudentAttendance (
    attendance_id INTEGER PRIMARY KEY,
    user_id INTEGER REFERENCES Students(user_id),
    attendance_date DATE,
    is_present BOOLEAN
);


-- student_id,name,gender,birthday,grade_level,math_score,reading_score,writing_score,attendance_rate,
-- parent_education,study_hours,internet_access,lunch_type,extra_activities,final_result

CREATE TYPE GRADE_CATEGORY as ENUM('Assignment', 'Quiz', 'Exam', 'Project', 'Attendance');

CREATE TABLE Grades (
    grade_id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER REFERENCES Users(user_id),
    grade_subject SUBJECTS,
    grade_task VARCHAR(200),
    grade_type GRADE_CATEGORY,
    date_assigned DATE,
    deadline DATE
);

CREATE TABLE GradesSubmition (
    grade_id INTEGER REFERENCES Grades(grade_id),
    user_id INTEGER REFERENCES Students(user_id),
    grade NUMERIC,
    date_submitted DATE,
    PRIMARY KEY (grade_id, user_id)
);



CREATE TABLE Class (
    class_id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    class_name VARCHAR(40),
    class_codification_number INTEGER,
    class_subject CHAR(4)
);

INSERT INTO Class (class_name, class_codification_number, class_subject) VALUES
('Introduction to Mathematics', 1001, 'MATH'),
('Introduction to English', 1001, 'ENGL');



CREATE TABLE ClassUser(
    class_id INTEGER REFERENCES Class(class_id),
    user_id INTEGER REFERENCES Users(user_id),
    PRIMARY KEY (class_id, user_id)
);

INSERT INTO ClassUser(class_id, user_id) VALUES 
(1,1),
(1,2);

